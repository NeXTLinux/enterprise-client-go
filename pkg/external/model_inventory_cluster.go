/*
Nextlinux Enterprise API Server

This is the Nextlinux Enterprise API. It provides additional external API routes and functionality for enterprise users.

API version: 0.2.1
Contact: dev@nextlinux.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package external

import (
	"encoding/json"
)

// InventoryCluster Cluster configured for reporting Image Inventory
type InventoryCluster struct {
	ClusterName *string `json:"cluster_name,omitempty"`
	InventoryType *string `json:"inventory_type,omitempty"`
	ClusterConfig *InventoryClusterConfig `json:"cluster_config,omitempty"`
}

// NewInventoryCluster instantiates a new InventoryCluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInventoryCluster() *InventoryCluster {
	this := InventoryCluster{}
	return &this
}

// NewInventoryClusterWithDefaults instantiates a new InventoryCluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInventoryClusterWithDefaults() *InventoryCluster {
	this := InventoryCluster{}
	return &this
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise.
func (o *InventoryCluster) GetClusterName() string {
	if o == nil || o.ClusterName == nil {
		var ret string
		return ret
	}
	return *o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryCluster) GetClusterNameOk() (*string, bool) {
	if o == nil || o.ClusterName == nil {
		return nil, false
	}
	return o.ClusterName, true
}

// HasClusterName returns a boolean if a field has been set.
func (o *InventoryCluster) HasClusterName() bool {
	if o != nil && o.ClusterName != nil {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given string and assigns it to the ClusterName field.
func (o *InventoryCluster) SetClusterName(v string) {
	o.ClusterName = &v
}

// GetInventoryType returns the InventoryType field value if set, zero value otherwise.
func (o *InventoryCluster) GetInventoryType() string {
	if o == nil || o.InventoryType == nil {
		var ret string
		return ret
	}
	return *o.InventoryType
}

// GetInventoryTypeOk returns a tuple with the InventoryType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryCluster) GetInventoryTypeOk() (*string, bool) {
	if o == nil || o.InventoryType == nil {
		return nil, false
	}
	return o.InventoryType, true
}

// HasInventoryType returns a boolean if a field has been set.
func (o *InventoryCluster) HasInventoryType() bool {
	if o != nil && o.InventoryType != nil {
		return true
	}

	return false
}

// SetInventoryType gets a reference to the given string and assigns it to the InventoryType field.
func (o *InventoryCluster) SetInventoryType(v string) {
	o.InventoryType = &v
}

// GetClusterConfig returns the ClusterConfig field value if set, zero value otherwise.
func (o *InventoryCluster) GetClusterConfig() InventoryClusterConfig {
	if o == nil || o.ClusterConfig == nil {
		var ret InventoryClusterConfig
		return ret
	}
	return *o.ClusterConfig
}

// GetClusterConfigOk returns a tuple with the ClusterConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryCluster) GetClusterConfigOk() (*InventoryClusterConfig, bool) {
	if o == nil || o.ClusterConfig == nil {
		return nil, false
	}
	return o.ClusterConfig, true
}

// HasClusterConfig returns a boolean if a field has been set.
func (o *InventoryCluster) HasClusterConfig() bool {
	if o != nil && o.ClusterConfig != nil {
		return true
	}

	return false
}

// SetClusterConfig gets a reference to the given InventoryClusterConfig and assigns it to the ClusterConfig field.
func (o *InventoryCluster) SetClusterConfig(v InventoryClusterConfig) {
	o.ClusterConfig = &v
}

func (o InventoryCluster) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterName != nil {
		toSerialize["cluster_name"] = o.ClusterName
	}
	if o.InventoryType != nil {
		toSerialize["inventory_type"] = o.InventoryType
	}
	if o.ClusterConfig != nil {
		toSerialize["cluster_config"] = o.ClusterConfig
	}
	return json.Marshal(toSerialize)
}

type NullableInventoryCluster struct {
	value *InventoryCluster
	isSet bool
}

func (v NullableInventoryCluster) Get() *InventoryCluster {
	return v.value
}

func (v *NullableInventoryCluster) Set(val *InventoryCluster) {
	v.value = val
	v.isSet = true
}

func (v NullableInventoryCluster) IsSet() bool {
	return v.isSet
}

func (v *NullableInventoryCluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInventoryCluster(val *InventoryCluster) *NullableInventoryCluster {
	return &NullableInventoryCluster{value: val, isSet: true}
}

func (v NullableInventoryCluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInventoryCluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


