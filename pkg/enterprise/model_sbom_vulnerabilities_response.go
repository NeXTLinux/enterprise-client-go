/*
Anchore Enterprise API Server

This is the Anchore Enterprise API. It provides additional external API routes and functionality for enterprise users.

API version: 0.2.1
Contact: dev@nextlinux.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enterprise

import (
	"encoding/json"
)

// SBOMVulnerabilitiesResponse Envelope containing list of vulnerabilities for a source repo
type SBOMVulnerabilitiesResponse struct {
	SbomId *string `json:"sbom_id,omitempty"`
	VulnerabilityType *string `json:"vulnerability_type,omitempty"`
	// List of Vulnerability objects
	Vulnerabilities *[]Vulnerability `json:"vulnerabilities,omitempty"`
}

// NewSBOMVulnerabilitiesResponse instantiates a new SBOMVulnerabilitiesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSBOMVulnerabilitiesResponse() *SBOMVulnerabilitiesResponse {
	this := SBOMVulnerabilitiesResponse{}
	return &this
}

// NewSBOMVulnerabilitiesResponseWithDefaults instantiates a new SBOMVulnerabilitiesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSBOMVulnerabilitiesResponseWithDefaults() *SBOMVulnerabilitiesResponse {
	this := SBOMVulnerabilitiesResponse{}
	return &this
}

// GetSbomId returns the SbomId field value if set, zero value otherwise.
func (o *SBOMVulnerabilitiesResponse) GetSbomId() string {
	if o == nil || o.SbomId == nil {
		var ret string
		return ret
	}
	return *o.SbomId
}

// GetSbomIdOk returns a tuple with the SbomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SBOMVulnerabilitiesResponse) GetSbomIdOk() (*string, bool) {
	if o == nil || o.SbomId == nil {
		return nil, false
	}
	return o.SbomId, true
}

// HasSbomId returns a boolean if a field has been set.
func (o *SBOMVulnerabilitiesResponse) HasSbomId() bool {
	if o != nil && o.SbomId != nil {
		return true
	}

	return false
}

// SetSbomId gets a reference to the given string and assigns it to the SbomId field.
func (o *SBOMVulnerabilitiesResponse) SetSbomId(v string) {
	o.SbomId = &v
}

// GetVulnerabilityType returns the VulnerabilityType field value if set, zero value otherwise.
func (o *SBOMVulnerabilitiesResponse) GetVulnerabilityType() string {
	if o == nil || o.VulnerabilityType == nil {
		var ret string
		return ret
	}
	return *o.VulnerabilityType
}

// GetVulnerabilityTypeOk returns a tuple with the VulnerabilityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SBOMVulnerabilitiesResponse) GetVulnerabilityTypeOk() (*string, bool) {
	if o == nil || o.VulnerabilityType == nil {
		return nil, false
	}
	return o.VulnerabilityType, true
}

// HasVulnerabilityType returns a boolean if a field has been set.
func (o *SBOMVulnerabilitiesResponse) HasVulnerabilityType() bool {
	if o != nil && o.VulnerabilityType != nil {
		return true
	}

	return false
}

// SetVulnerabilityType gets a reference to the given string and assigns it to the VulnerabilityType field.
func (o *SBOMVulnerabilitiesResponse) SetVulnerabilityType(v string) {
	o.VulnerabilityType = &v
}

// GetVulnerabilities returns the Vulnerabilities field value if set, zero value otherwise.
func (o *SBOMVulnerabilitiesResponse) GetVulnerabilities() []Vulnerability {
	if o == nil || o.Vulnerabilities == nil {
		var ret []Vulnerability
		return ret
	}
	return *o.Vulnerabilities
}

// GetVulnerabilitiesOk returns a tuple with the Vulnerabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SBOMVulnerabilitiesResponse) GetVulnerabilitiesOk() (*[]Vulnerability, bool) {
	if o == nil || o.Vulnerabilities == nil {
		return nil, false
	}
	return o.Vulnerabilities, true
}

// HasVulnerabilities returns a boolean if a field has been set.
func (o *SBOMVulnerabilitiesResponse) HasVulnerabilities() bool {
	if o != nil && o.Vulnerabilities != nil {
		return true
	}

	return false
}

// SetVulnerabilities gets a reference to the given []Vulnerability and assigns it to the Vulnerabilities field.
func (o *SBOMVulnerabilitiesResponse) SetVulnerabilities(v []Vulnerability) {
	o.Vulnerabilities = &v
}

func (o SBOMVulnerabilitiesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SbomId != nil {
		toSerialize["sbom_id"] = o.SbomId
	}
	if o.VulnerabilityType != nil {
		toSerialize["vulnerability_type"] = o.VulnerabilityType
	}
	if o.Vulnerabilities != nil {
		toSerialize["vulnerabilities"] = o.Vulnerabilities
	}
	return json.Marshal(toSerialize)
}

type NullableSBOMVulnerabilitiesResponse struct {
	value *SBOMVulnerabilitiesResponse
	isSet bool
}

func (v NullableSBOMVulnerabilitiesResponse) Get() *SBOMVulnerabilitiesResponse {
	return v.value
}

func (v *NullableSBOMVulnerabilitiesResponse) Set(val *SBOMVulnerabilitiesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSBOMVulnerabilitiesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSBOMVulnerabilitiesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSBOMVulnerabilitiesResponse(val *SBOMVulnerabilitiesResponse) *NullableSBOMVulnerabilitiesResponse {
	return &NullableSBOMVulnerabilitiesResponse{value: val, isSet: true}
}

func (v NullableSBOMVulnerabilitiesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSBOMVulnerabilitiesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


