/*
Nextlinux Enterprise API Server

This is the Nextlinux Enterprise API. It provides additional external API routes and functionality for enterprise users.

API version: 0.7.0
Contact: dev@nextlinux.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enterprise

import (
	"encoding/json"
)

// ECSInventoryTasks struct for ECSInventoryTasks
type ECSInventoryTasks struct {
	Arn string `json:"arn"`
	ServiceArn *string `json:"service_arn,omitempty"`
	ClusterArn *string `json:"cluster_arn,omitempty"`
	TaskDefinitionArn *string `json:"task_definition_arn,omitempty"`
	Tags *map[string]string `json:"tags,omitempty"`
}

// NewECSInventoryTasks instantiates a new ECSInventoryTasks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewECSInventoryTasks(arn string) *ECSInventoryTasks {
	this := ECSInventoryTasks{}
	this.Arn = arn
	return &this
}

// NewECSInventoryTasksWithDefaults instantiates a new ECSInventoryTasks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewECSInventoryTasksWithDefaults() *ECSInventoryTasks {
	this := ECSInventoryTasks{}
	return &this
}

// GetArn returns the Arn field value
func (o *ECSInventoryTasks) GetArn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Arn
}

// GetArnOk returns a tuple with the Arn field value
// and a boolean to check if the value has been set.
func (o *ECSInventoryTasks) GetArnOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Arn, true
}

// SetArn sets field value
func (o *ECSInventoryTasks) SetArn(v string) {
	o.Arn = v
}

// GetServiceArn returns the ServiceArn field value if set, zero value otherwise.
func (o *ECSInventoryTasks) GetServiceArn() string {
	if o == nil || o.ServiceArn == nil {
		var ret string
		return ret
	}
	return *o.ServiceArn
}

// GetServiceArnOk returns a tuple with the ServiceArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECSInventoryTasks) GetServiceArnOk() (*string, bool) {
	if o == nil || o.ServiceArn == nil {
		return nil, false
	}
	return o.ServiceArn, true
}

// HasServiceArn returns a boolean if a field has been set.
func (o *ECSInventoryTasks) HasServiceArn() bool {
	if o != nil && o.ServiceArn != nil {
		return true
	}

	return false
}

// SetServiceArn gets a reference to the given string and assigns it to the ServiceArn field.
func (o *ECSInventoryTasks) SetServiceArn(v string) {
	o.ServiceArn = &v
}

// GetClusterArn returns the ClusterArn field value if set, zero value otherwise.
func (o *ECSInventoryTasks) GetClusterArn() string {
	if o == nil || o.ClusterArn == nil {
		var ret string
		return ret
	}
	return *o.ClusterArn
}

// GetClusterArnOk returns a tuple with the ClusterArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECSInventoryTasks) GetClusterArnOk() (*string, bool) {
	if o == nil || o.ClusterArn == nil {
		return nil, false
	}
	return o.ClusterArn, true
}

// HasClusterArn returns a boolean if a field has been set.
func (o *ECSInventoryTasks) HasClusterArn() bool {
	if o != nil && o.ClusterArn != nil {
		return true
	}

	return false
}

// SetClusterArn gets a reference to the given string and assigns it to the ClusterArn field.
func (o *ECSInventoryTasks) SetClusterArn(v string) {
	o.ClusterArn = &v
}

// GetTaskDefinitionArn returns the TaskDefinitionArn field value if set, zero value otherwise.
func (o *ECSInventoryTasks) GetTaskDefinitionArn() string {
	if o == nil || o.TaskDefinitionArn == nil {
		var ret string
		return ret
	}
	return *o.TaskDefinitionArn
}

// GetTaskDefinitionArnOk returns a tuple with the TaskDefinitionArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECSInventoryTasks) GetTaskDefinitionArnOk() (*string, bool) {
	if o == nil || o.TaskDefinitionArn == nil {
		return nil, false
	}
	return o.TaskDefinitionArn, true
}

// HasTaskDefinitionArn returns a boolean if a field has been set.
func (o *ECSInventoryTasks) HasTaskDefinitionArn() bool {
	if o != nil && o.TaskDefinitionArn != nil {
		return true
	}

	return false
}

// SetTaskDefinitionArn gets a reference to the given string and assigns it to the TaskDefinitionArn field.
func (o *ECSInventoryTasks) SetTaskDefinitionArn(v string) {
	o.TaskDefinitionArn = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ECSInventoryTasks) GetTags() map[string]string {
	if o == nil || o.Tags == nil {
		var ret map[string]string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECSInventoryTasks) GetTagsOk() (*map[string]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ECSInventoryTasks) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given map[string]string and assigns it to the Tags field.
func (o *ECSInventoryTasks) SetTags(v map[string]string) {
	o.Tags = &v
}

func (o ECSInventoryTasks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["arn"] = o.Arn
	}
	if o.ServiceArn != nil {
		toSerialize["service_arn"] = o.ServiceArn
	}
	if o.ClusterArn != nil {
		toSerialize["cluster_arn"] = o.ClusterArn
	}
	if o.TaskDefinitionArn != nil {
		toSerialize["task_definition_arn"] = o.TaskDefinitionArn
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableECSInventoryTasks struct {
	value *ECSInventoryTasks
	isSet bool
}

func (v NullableECSInventoryTasks) Get() *ECSInventoryTasks {
	return v.value
}

func (v *NullableECSInventoryTasks) Set(val *ECSInventoryTasks) {
	v.value = val
	v.isSet = true
}

func (v NullableECSInventoryTasks) IsSet() bool {
	return v.isSet
}

func (v *NullableECSInventoryTasks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableECSInventoryTasks(val *ECSInventoryTasks) *NullableECSInventoryTasks {
	return &NullableECSInventoryTasks{value: val, isSet: true}
}

func (v NullableECSInventoryTasks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableECSInventoryTasks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


