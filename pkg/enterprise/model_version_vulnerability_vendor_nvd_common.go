/*
Nextlinux Enterprise API Server

This is the Nextlinux Enterprise API. It provides additional external API routes and functionality for enterprise users.

API version: 0.7.0
Contact: dev@nextlinux.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enterprise

import (
	"encoding/json"
)

// VersionVulnerabilityVendorNVDCommon Values common to vendor and nvd entries in application version vulnerability report
type VersionVulnerabilityVendorNVDCommon struct {
	Cvss *VersionVulnerabilityVendorNVDCommonCvss `json:"cvss,omitempty"`
	Description *string `json:"description,omitempty"`
	Severity *string `json:"severity,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewVersionVulnerabilityVendorNVDCommon instantiates a new VersionVulnerabilityVendorNVDCommon object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVersionVulnerabilityVendorNVDCommon() *VersionVulnerabilityVendorNVDCommon {
	this := VersionVulnerabilityVendorNVDCommon{}
	return &this
}

// NewVersionVulnerabilityVendorNVDCommonWithDefaults instantiates a new VersionVulnerabilityVendorNVDCommon object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVersionVulnerabilityVendorNVDCommonWithDefaults() *VersionVulnerabilityVendorNVDCommon {
	this := VersionVulnerabilityVendorNVDCommon{}
	return &this
}

// GetCvss returns the Cvss field value if set, zero value otherwise.
func (o *VersionVulnerabilityVendorNVDCommon) GetCvss() VersionVulnerabilityVendorNVDCommonCvss {
	if o == nil || o.Cvss == nil {
		var ret VersionVulnerabilityVendorNVDCommonCvss
		return ret
	}
	return *o.Cvss
}

// GetCvssOk returns a tuple with the Cvss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionVulnerabilityVendorNVDCommon) GetCvssOk() (*VersionVulnerabilityVendorNVDCommonCvss, bool) {
	if o == nil || o.Cvss == nil {
		return nil, false
	}
	return o.Cvss, true
}

// HasCvss returns a boolean if a field has been set.
func (o *VersionVulnerabilityVendorNVDCommon) HasCvss() bool {
	if o != nil && o.Cvss != nil {
		return true
	}

	return false
}

// SetCvss gets a reference to the given VersionVulnerabilityVendorNVDCommonCvss and assigns it to the Cvss field.
func (o *VersionVulnerabilityVendorNVDCommon) SetCvss(v VersionVulnerabilityVendorNVDCommonCvss) {
	o.Cvss = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VersionVulnerabilityVendorNVDCommon) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionVulnerabilityVendorNVDCommon) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VersionVulnerabilityVendorNVDCommon) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VersionVulnerabilityVendorNVDCommon) SetDescription(v string) {
	o.Description = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *VersionVulnerabilityVendorNVDCommon) GetSeverity() string {
	if o == nil || o.Severity == nil {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionVulnerabilityVendorNVDCommon) GetSeverityOk() (*string, bool) {
	if o == nil || o.Severity == nil {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *VersionVulnerabilityVendorNVDCommon) HasSeverity() bool {
	if o != nil && o.Severity != nil {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *VersionVulnerabilityVendorNVDCommon) SetSeverity(v string) {
	o.Severity = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *VersionVulnerabilityVendorNVDCommon) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionVulnerabilityVendorNVDCommon) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *VersionVulnerabilityVendorNVDCommon) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *VersionVulnerabilityVendorNVDCommon) SetUrl(v string) {
	o.Url = &v
}

func (o VersionVulnerabilityVendorNVDCommon) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cvss != nil {
		toSerialize["cvss"] = o.Cvss
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Severity != nil {
		toSerialize["severity"] = o.Severity
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableVersionVulnerabilityVendorNVDCommon struct {
	value *VersionVulnerabilityVendorNVDCommon
	isSet bool
}

func (v NullableVersionVulnerabilityVendorNVDCommon) Get() *VersionVulnerabilityVendorNVDCommon {
	return v.value
}

func (v *NullableVersionVulnerabilityVendorNVDCommon) Set(val *VersionVulnerabilityVendorNVDCommon) {
	v.value = val
	v.isSet = true
}

func (v NullableVersionVulnerabilityVendorNVDCommon) IsSet() bool {
	return v.isSet
}

func (v *NullableVersionVulnerabilityVendorNVDCommon) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVersionVulnerabilityVendorNVDCommon(val *VersionVulnerabilityVendorNVDCommon) *NullableVersionVulnerabilityVendorNVDCommon {
	return &NullableVersionVulnerabilityVendorNVDCommon{value: val, isSet: true}
}

func (v NullableVersionVulnerabilityVendorNVDCommon) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVersionVulnerabilityVendorNVDCommon) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


