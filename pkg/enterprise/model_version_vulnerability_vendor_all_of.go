/*
Nextlinux Enterprise API Server

This is the Nextlinux Enterprise API. It provides additional external API routes and functionality for enterprise users.

API version: 0.7.0
Contact: dev@nextlinux.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enterprise

import (
	"encoding/json"
)

// VersionVulnerabilityVendorAllOf struct for VersionVulnerabilityVendorAllOf
type VersionVulnerabilityVendorAllOf struct {
	Feed *string `json:"feed,omitempty"`
	Group *string `json:"group,omitempty"`
	WillNotFix *bool `json:"will_not_fix,omitempty"`
}

// NewVersionVulnerabilityVendorAllOf instantiates a new VersionVulnerabilityVendorAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVersionVulnerabilityVendorAllOf() *VersionVulnerabilityVendorAllOf {
	this := VersionVulnerabilityVendorAllOf{}
	return &this
}

// NewVersionVulnerabilityVendorAllOfWithDefaults instantiates a new VersionVulnerabilityVendorAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVersionVulnerabilityVendorAllOfWithDefaults() *VersionVulnerabilityVendorAllOf {
	this := VersionVulnerabilityVendorAllOf{}
	return &this
}

// GetFeed returns the Feed field value if set, zero value otherwise.
func (o *VersionVulnerabilityVendorAllOf) GetFeed() string {
	if o == nil || o.Feed == nil {
		var ret string
		return ret
	}
	return *o.Feed
}

// GetFeedOk returns a tuple with the Feed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionVulnerabilityVendorAllOf) GetFeedOk() (*string, bool) {
	if o == nil || o.Feed == nil {
		return nil, false
	}
	return o.Feed, true
}

// HasFeed returns a boolean if a field has been set.
func (o *VersionVulnerabilityVendorAllOf) HasFeed() bool {
	if o != nil && o.Feed != nil {
		return true
	}

	return false
}

// SetFeed gets a reference to the given string and assigns it to the Feed field.
func (o *VersionVulnerabilityVendorAllOf) SetFeed(v string) {
	o.Feed = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *VersionVulnerabilityVendorAllOf) GetGroup() string {
	if o == nil || o.Group == nil {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionVulnerabilityVendorAllOf) GetGroupOk() (*string, bool) {
	if o == nil || o.Group == nil {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *VersionVulnerabilityVendorAllOf) HasGroup() bool {
	if o != nil && o.Group != nil {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *VersionVulnerabilityVendorAllOf) SetGroup(v string) {
	o.Group = &v
}

// GetWillNotFix returns the WillNotFix field value if set, zero value otherwise.
func (o *VersionVulnerabilityVendorAllOf) GetWillNotFix() bool {
	if o == nil || o.WillNotFix == nil {
		var ret bool
		return ret
	}
	return *o.WillNotFix
}

// GetWillNotFixOk returns a tuple with the WillNotFix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionVulnerabilityVendorAllOf) GetWillNotFixOk() (*bool, bool) {
	if o == nil || o.WillNotFix == nil {
		return nil, false
	}
	return o.WillNotFix, true
}

// HasWillNotFix returns a boolean if a field has been set.
func (o *VersionVulnerabilityVendorAllOf) HasWillNotFix() bool {
	if o != nil && o.WillNotFix != nil {
		return true
	}

	return false
}

// SetWillNotFix gets a reference to the given bool and assigns it to the WillNotFix field.
func (o *VersionVulnerabilityVendorAllOf) SetWillNotFix(v bool) {
	o.WillNotFix = &v
}

func (o VersionVulnerabilityVendorAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Feed != nil {
		toSerialize["feed"] = o.Feed
	}
	if o.Group != nil {
		toSerialize["group"] = o.Group
	}
	if o.WillNotFix != nil {
		toSerialize["will_not_fix"] = o.WillNotFix
	}
	return json.Marshal(toSerialize)
}

type NullableVersionVulnerabilityVendorAllOf struct {
	value *VersionVulnerabilityVendorAllOf
	isSet bool
}

func (v NullableVersionVulnerabilityVendorAllOf) Get() *VersionVulnerabilityVendorAllOf {
	return v.value
}

func (v *NullableVersionVulnerabilityVendorAllOf) Set(val *VersionVulnerabilityVendorAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableVersionVulnerabilityVendorAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableVersionVulnerabilityVendorAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVersionVulnerabilityVendorAllOf(val *VersionVulnerabilityVendorAllOf) *NullableVersionVulnerabilityVendorAllOf {
	return &NullableVersionVulnerabilityVendorAllOf{value: val, isSet: true}
}

func (v NullableVersionVulnerabilityVendorAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVersionVulnerabilityVendorAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


