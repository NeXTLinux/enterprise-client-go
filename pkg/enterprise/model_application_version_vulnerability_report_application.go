/*
Nextlinux Enterprise API Server

This is the Nextlinux Enterprise API. It provides additional external API routes and functionality for enterprise users.

API version: 0.7.0
Contact: dev@nextlinux.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enterprise

import (
	"encoding/json"
)

// ApplicationVersionVulnerabilityReportApplication struct for ApplicationVersionVulnerabilityReportApplication
type ApplicationVersionVulnerabilityReportApplication struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	VersionName *string `json:"version_name,omitempty"`
	VersionId *string `json:"version_id,omitempty"`
	Artifacts *ApplicationVersionVulnerabilityReportApplicationArtifacts `json:"artifacts,omitempty"`
}

// NewApplicationVersionVulnerabilityReportApplication instantiates a new ApplicationVersionVulnerabilityReportApplication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationVersionVulnerabilityReportApplication() *ApplicationVersionVulnerabilityReportApplication {
	this := ApplicationVersionVulnerabilityReportApplication{}
	return &this
}

// NewApplicationVersionVulnerabilityReportApplicationWithDefaults instantiates a new ApplicationVersionVulnerabilityReportApplication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationVersionVulnerabilityReportApplicationWithDefaults() *ApplicationVersionVulnerabilityReportApplication {
	this := ApplicationVersionVulnerabilityReportApplication{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApplicationVersionVulnerabilityReportApplication) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationVersionVulnerabilityReportApplication) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApplicationVersionVulnerabilityReportApplication) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApplicationVersionVulnerabilityReportApplication) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApplicationVersionVulnerabilityReportApplication) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationVersionVulnerabilityReportApplication) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApplicationVersionVulnerabilityReportApplication) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApplicationVersionVulnerabilityReportApplication) SetName(v string) {
	o.Name = &v
}

// GetVersionName returns the VersionName field value if set, zero value otherwise.
func (o *ApplicationVersionVulnerabilityReportApplication) GetVersionName() string {
	if o == nil || o.VersionName == nil {
		var ret string
		return ret
	}
	return *o.VersionName
}

// GetVersionNameOk returns a tuple with the VersionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationVersionVulnerabilityReportApplication) GetVersionNameOk() (*string, bool) {
	if o == nil || o.VersionName == nil {
		return nil, false
	}
	return o.VersionName, true
}

// HasVersionName returns a boolean if a field has been set.
func (o *ApplicationVersionVulnerabilityReportApplication) HasVersionName() bool {
	if o != nil && o.VersionName != nil {
		return true
	}

	return false
}

// SetVersionName gets a reference to the given string and assigns it to the VersionName field.
func (o *ApplicationVersionVulnerabilityReportApplication) SetVersionName(v string) {
	o.VersionName = &v
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *ApplicationVersionVulnerabilityReportApplication) GetVersionId() string {
	if o == nil || o.VersionId == nil {
		var ret string
		return ret
	}
	return *o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationVersionVulnerabilityReportApplication) GetVersionIdOk() (*string, bool) {
	if o == nil || o.VersionId == nil {
		return nil, false
	}
	return o.VersionId, true
}

// HasVersionId returns a boolean if a field has been set.
func (o *ApplicationVersionVulnerabilityReportApplication) HasVersionId() bool {
	if o != nil && o.VersionId != nil {
		return true
	}

	return false
}

// SetVersionId gets a reference to the given string and assigns it to the VersionId field.
func (o *ApplicationVersionVulnerabilityReportApplication) SetVersionId(v string) {
	o.VersionId = &v
}

// GetArtifacts returns the Artifacts field value if set, zero value otherwise.
func (o *ApplicationVersionVulnerabilityReportApplication) GetArtifacts() ApplicationVersionVulnerabilityReportApplicationArtifacts {
	if o == nil || o.Artifacts == nil {
		var ret ApplicationVersionVulnerabilityReportApplicationArtifacts
		return ret
	}
	return *o.Artifacts
}

// GetArtifactsOk returns a tuple with the Artifacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationVersionVulnerabilityReportApplication) GetArtifactsOk() (*ApplicationVersionVulnerabilityReportApplicationArtifacts, bool) {
	if o == nil || o.Artifacts == nil {
		return nil, false
	}
	return o.Artifacts, true
}

// HasArtifacts returns a boolean if a field has been set.
func (o *ApplicationVersionVulnerabilityReportApplication) HasArtifacts() bool {
	if o != nil && o.Artifacts != nil {
		return true
	}

	return false
}

// SetArtifacts gets a reference to the given ApplicationVersionVulnerabilityReportApplicationArtifacts and assigns it to the Artifacts field.
func (o *ApplicationVersionVulnerabilityReportApplication) SetArtifacts(v ApplicationVersionVulnerabilityReportApplicationArtifacts) {
	o.Artifacts = &v
}

func (o ApplicationVersionVulnerabilityReportApplication) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.VersionName != nil {
		toSerialize["version_name"] = o.VersionName
	}
	if o.VersionId != nil {
		toSerialize["version_id"] = o.VersionId
	}
	if o.Artifacts != nil {
		toSerialize["artifacts"] = o.Artifacts
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationVersionVulnerabilityReportApplication struct {
	value *ApplicationVersionVulnerabilityReportApplication
	isSet bool
}

func (v NullableApplicationVersionVulnerabilityReportApplication) Get() *ApplicationVersionVulnerabilityReportApplication {
	return v.value
}

func (v *NullableApplicationVersionVulnerabilityReportApplication) Set(val *ApplicationVersionVulnerabilityReportApplication) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationVersionVulnerabilityReportApplication) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationVersionVulnerabilityReportApplication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationVersionVulnerabilityReportApplication(val *ApplicationVersionVulnerabilityReportApplication) *NullableApplicationVersionVulnerabilityReportApplication {
	return &NullableApplicationVersionVulnerabilityReportApplication{value: val, isSet: true}
}

func (v NullableApplicationVersionVulnerabilityReportApplication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationVersionVulnerabilityReportApplication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


