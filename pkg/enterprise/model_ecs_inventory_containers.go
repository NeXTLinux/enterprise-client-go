/*
Nextlinux Enterprise API Server

This is the Nextlinux Enterprise API. It provides additional external API routes and functionality for enterprise users.

API version: 0.7.0
Contact: dev@nextlinux.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enterprise

import (
	"encoding/json"
)

// ECSInventoryContainers struct for ECSInventoryContainers
type ECSInventoryContainers struct {
	Arn string `json:"arn"`
	TaskArn *string `json:"task_arn,omitempty"`
	ImageTag string `json:"image_tag"`
	ImageDigest *string `json:"image_digest,omitempty"`
}

// NewECSInventoryContainers instantiates a new ECSInventoryContainers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewECSInventoryContainers(arn string, imageTag string) *ECSInventoryContainers {
	this := ECSInventoryContainers{}
	this.Arn = arn
	this.ImageTag = imageTag
	return &this
}

// NewECSInventoryContainersWithDefaults instantiates a new ECSInventoryContainers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewECSInventoryContainersWithDefaults() *ECSInventoryContainers {
	this := ECSInventoryContainers{}
	return &this
}

// GetArn returns the Arn field value
func (o *ECSInventoryContainers) GetArn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Arn
}

// GetArnOk returns a tuple with the Arn field value
// and a boolean to check if the value has been set.
func (o *ECSInventoryContainers) GetArnOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Arn, true
}

// SetArn sets field value
func (o *ECSInventoryContainers) SetArn(v string) {
	o.Arn = v
}

// GetTaskArn returns the TaskArn field value if set, zero value otherwise.
func (o *ECSInventoryContainers) GetTaskArn() string {
	if o == nil || o.TaskArn == nil {
		var ret string
		return ret
	}
	return *o.TaskArn
}

// GetTaskArnOk returns a tuple with the TaskArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECSInventoryContainers) GetTaskArnOk() (*string, bool) {
	if o == nil || o.TaskArn == nil {
		return nil, false
	}
	return o.TaskArn, true
}

// HasTaskArn returns a boolean if a field has been set.
func (o *ECSInventoryContainers) HasTaskArn() bool {
	if o != nil && o.TaskArn != nil {
		return true
	}

	return false
}

// SetTaskArn gets a reference to the given string and assigns it to the TaskArn field.
func (o *ECSInventoryContainers) SetTaskArn(v string) {
	o.TaskArn = &v
}

// GetImageTag returns the ImageTag field value
func (o *ECSInventoryContainers) GetImageTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageTag
}

// GetImageTagOk returns a tuple with the ImageTag field value
// and a boolean to check if the value has been set.
func (o *ECSInventoryContainers) GetImageTagOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ImageTag, true
}

// SetImageTag sets field value
func (o *ECSInventoryContainers) SetImageTag(v string) {
	o.ImageTag = v
}

// GetImageDigest returns the ImageDigest field value if set, zero value otherwise.
func (o *ECSInventoryContainers) GetImageDigest() string {
	if o == nil || o.ImageDigest == nil {
		var ret string
		return ret
	}
	return *o.ImageDigest
}

// GetImageDigestOk returns a tuple with the ImageDigest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECSInventoryContainers) GetImageDigestOk() (*string, bool) {
	if o == nil || o.ImageDigest == nil {
		return nil, false
	}
	return o.ImageDigest, true
}

// HasImageDigest returns a boolean if a field has been set.
func (o *ECSInventoryContainers) HasImageDigest() bool {
	if o != nil && o.ImageDigest != nil {
		return true
	}

	return false
}

// SetImageDigest gets a reference to the given string and assigns it to the ImageDigest field.
func (o *ECSInventoryContainers) SetImageDigest(v string) {
	o.ImageDigest = &v
}

func (o ECSInventoryContainers) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["arn"] = o.Arn
	}
	if o.TaskArn != nil {
		toSerialize["task_arn"] = o.TaskArn
	}
	if true {
		toSerialize["image_tag"] = o.ImageTag
	}
	if o.ImageDigest != nil {
		toSerialize["image_digest"] = o.ImageDigest
	}
	return json.Marshal(toSerialize)
}

type NullableECSInventoryContainers struct {
	value *ECSInventoryContainers
	isSet bool
}

func (v NullableECSInventoryContainers) Get() *ECSInventoryContainers {
	return v.value
}

func (v *NullableECSInventoryContainers) Set(val *ECSInventoryContainers) {
	v.value = val
	v.isSet = true
}

func (v NullableECSInventoryContainers) IsSet() bool {
	return v.isSet
}

func (v *NullableECSInventoryContainers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableECSInventoryContainers(val *ECSInventoryContainers) *NullableECSInventoryContainers {
	return &NullableECSInventoryContainers{value: val, isSet: true}
}

func (v NullableECSInventoryContainers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableECSInventoryContainers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


