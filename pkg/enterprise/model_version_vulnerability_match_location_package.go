/*
Nextlinux Enterprise API Server

This is the Nextlinux Enterprise API. It provides additional external API routes and functionality for enterprise users.

API version: 0.7.0
Contact: dev@nextlinux.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enterprise

import (
	"encoding/json"
)

// VersionVulnerabilityMatchLocationPackage struct for VersionVulnerabilityMatchLocationPackage
type VersionVulnerabilityMatchLocationPackage struct {
	Name *string `json:"name,omitempty"`
	Type *string `json:"type,omitempty"`
	Version *string `json:"version,omitempty"`
	Location *string `json:"location,omitempty"`
}

// NewVersionVulnerabilityMatchLocationPackage instantiates a new VersionVulnerabilityMatchLocationPackage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVersionVulnerabilityMatchLocationPackage() *VersionVulnerabilityMatchLocationPackage {
	this := VersionVulnerabilityMatchLocationPackage{}
	return &this
}

// NewVersionVulnerabilityMatchLocationPackageWithDefaults instantiates a new VersionVulnerabilityMatchLocationPackage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVersionVulnerabilityMatchLocationPackageWithDefaults() *VersionVulnerabilityMatchLocationPackage {
	this := VersionVulnerabilityMatchLocationPackage{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VersionVulnerabilityMatchLocationPackage) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionVulnerabilityMatchLocationPackage) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VersionVulnerabilityMatchLocationPackage) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VersionVulnerabilityMatchLocationPackage) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *VersionVulnerabilityMatchLocationPackage) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionVulnerabilityMatchLocationPackage) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *VersionVulnerabilityMatchLocationPackage) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *VersionVulnerabilityMatchLocationPackage) SetType(v string) {
	o.Type = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *VersionVulnerabilityMatchLocationPackage) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionVulnerabilityMatchLocationPackage) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *VersionVulnerabilityMatchLocationPackage) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *VersionVulnerabilityMatchLocationPackage) SetVersion(v string) {
	o.Version = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *VersionVulnerabilityMatchLocationPackage) GetLocation() string {
	if o == nil || o.Location == nil {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionVulnerabilityMatchLocationPackage) GetLocationOk() (*string, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *VersionVulnerabilityMatchLocationPackage) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *VersionVulnerabilityMatchLocationPackage) SetLocation(v string) {
	o.Location = &v
}

func (o VersionVulnerabilityMatchLocationPackage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	return json.Marshal(toSerialize)
}

type NullableVersionVulnerabilityMatchLocationPackage struct {
	value *VersionVulnerabilityMatchLocationPackage
	isSet bool
}

func (v NullableVersionVulnerabilityMatchLocationPackage) Get() *VersionVulnerabilityMatchLocationPackage {
	return v.value
}

func (v *NullableVersionVulnerabilityMatchLocationPackage) Set(val *VersionVulnerabilityMatchLocationPackage) {
	v.value = val
	v.isSet = true
}

func (v NullableVersionVulnerabilityMatchLocationPackage) IsSet() bool {
	return v.isSet
}

func (v *NullableVersionVulnerabilityMatchLocationPackage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVersionVulnerabilityMatchLocationPackage(val *VersionVulnerabilityMatchLocationPackage) *NullableVersionVulnerabilityMatchLocationPackage {
	return &NullableVersionVulnerabilityMatchLocationPackage{value: val, isSet: true}
}

func (v NullableVersionVulnerabilityMatchLocationPackage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVersionVulnerabilityMatchLocationPackage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


