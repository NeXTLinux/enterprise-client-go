/*
Anchore Enterprise API Server

This is the Anchore Enterprise API. It provides additional external API routes and functionality for enterprise users.

API version: 0.2.1
Contact: dev@nextlinux.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enterprise

import (
	"encoding/json"
)

// ArtifactAssociationResponse Response body for an artifact to associate with an application version. Only one artifact type (matching the value of the type field) will be populated.
type ArtifactAssociationResponse struct {
	Source *Source `json:"source,omitempty"`
	Image *ImageArtifact `json:"image,omitempty"`
	ArtifactAssociationMetadata *ArtifactAssociationMetadata `json:"artifact_association_metadata,omitempty"`
}

// NewArtifactAssociationResponse instantiates a new ArtifactAssociationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArtifactAssociationResponse() *ArtifactAssociationResponse {
	this := ArtifactAssociationResponse{}
	return &this
}

// NewArtifactAssociationResponseWithDefaults instantiates a new ArtifactAssociationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArtifactAssociationResponseWithDefaults() *ArtifactAssociationResponse {
	this := ArtifactAssociationResponse{}
	return &this
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *ArtifactAssociationResponse) GetSource() Source {
	if o == nil || o.Source == nil {
		var ret Source
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactAssociationResponse) GetSourceOk() (*Source, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *ArtifactAssociationResponse) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given Source and assigns it to the Source field.
func (o *ArtifactAssociationResponse) SetSource(v Source) {
	o.Source = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *ArtifactAssociationResponse) GetImage() ImageArtifact {
	if o == nil || o.Image == nil {
		var ret ImageArtifact
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactAssociationResponse) GetImageOk() (*ImageArtifact, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *ArtifactAssociationResponse) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given ImageArtifact and assigns it to the Image field.
func (o *ArtifactAssociationResponse) SetImage(v ImageArtifact) {
	o.Image = &v
}

// GetArtifactAssociationMetadata returns the ArtifactAssociationMetadata field value if set, zero value otherwise.
func (o *ArtifactAssociationResponse) GetArtifactAssociationMetadata() ArtifactAssociationMetadata {
	if o == nil || o.ArtifactAssociationMetadata == nil {
		var ret ArtifactAssociationMetadata
		return ret
	}
	return *o.ArtifactAssociationMetadata
}

// GetArtifactAssociationMetadataOk returns a tuple with the ArtifactAssociationMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactAssociationResponse) GetArtifactAssociationMetadataOk() (*ArtifactAssociationMetadata, bool) {
	if o == nil || o.ArtifactAssociationMetadata == nil {
		return nil, false
	}
	return o.ArtifactAssociationMetadata, true
}

// HasArtifactAssociationMetadata returns a boolean if a field has been set.
func (o *ArtifactAssociationResponse) HasArtifactAssociationMetadata() bool {
	if o != nil && o.ArtifactAssociationMetadata != nil {
		return true
	}

	return false
}

// SetArtifactAssociationMetadata gets a reference to the given ArtifactAssociationMetadata and assigns it to the ArtifactAssociationMetadata field.
func (o *ArtifactAssociationResponse) SetArtifactAssociationMetadata(v ArtifactAssociationMetadata) {
	o.ArtifactAssociationMetadata = &v
}

func (o ArtifactAssociationResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	if o.ArtifactAssociationMetadata != nil {
		toSerialize["artifact_association_metadata"] = o.ArtifactAssociationMetadata
	}
	return json.Marshal(toSerialize)
}

type NullableArtifactAssociationResponse struct {
	value *ArtifactAssociationResponse
	isSet bool
}

func (v NullableArtifactAssociationResponse) Get() *ArtifactAssociationResponse {
	return v.value
}

func (v *NullableArtifactAssociationResponse) Set(val *ArtifactAssociationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableArtifactAssociationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableArtifactAssociationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArtifactAssociationResponse(val *ArtifactAssociationResponse) *NullableArtifactAssociationResponse {
	return &NullableArtifactAssociationResponse{value: val, isSet: true}
}

func (v NullableArtifactAssociationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArtifactAssociationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


