/*
Anchore Enterprise API Server

This is the Anchore Enterprise API. It provides additional external API routes and functionality for enterprise users.

API version: 0.2.1
Contact: dev@nextlinux.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enterprise

import (
	"encoding/json"
)

// EnterpriseVulnerabilityResponse envelope containing list of vulnerabilities
type EnterpriseVulnerabilityResponse struct {
	ImageDigest *string `json:"image_digest,omitempty"`
	BaseDigest *string `json:"base_digest,omitempty"`
	VulnerabilityType *string `json:"vulnerability_type,omitempty"`
	// List of Vulnerability objects
	Vulnerabilities *[]EnterpriseVulnerability `json:"vulnerabilities,omitempty"`
}

// NewEnterpriseVulnerabilityResponse instantiates a new EnterpriseVulnerabilityResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnterpriseVulnerabilityResponse() *EnterpriseVulnerabilityResponse {
	this := EnterpriseVulnerabilityResponse{}
	return &this
}

// NewEnterpriseVulnerabilityResponseWithDefaults instantiates a new EnterpriseVulnerabilityResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnterpriseVulnerabilityResponseWithDefaults() *EnterpriseVulnerabilityResponse {
	this := EnterpriseVulnerabilityResponse{}
	return &this
}

// GetImageDigest returns the ImageDigest field value if set, zero value otherwise.
func (o *EnterpriseVulnerabilityResponse) GetImageDigest() string {
	if o == nil || o.ImageDigest == nil {
		var ret string
		return ret
	}
	return *o.ImageDigest
}

// GetImageDigestOk returns a tuple with the ImageDigest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseVulnerabilityResponse) GetImageDigestOk() (*string, bool) {
	if o == nil || o.ImageDigest == nil {
		return nil, false
	}
	return o.ImageDigest, true
}

// HasImageDigest returns a boolean if a field has been set.
func (o *EnterpriseVulnerabilityResponse) HasImageDigest() bool {
	if o != nil && o.ImageDigest != nil {
		return true
	}

	return false
}

// SetImageDigest gets a reference to the given string and assigns it to the ImageDigest field.
func (o *EnterpriseVulnerabilityResponse) SetImageDigest(v string) {
	o.ImageDigest = &v
}

// GetBaseDigest returns the BaseDigest field value if set, zero value otherwise.
func (o *EnterpriseVulnerabilityResponse) GetBaseDigest() string {
	if o == nil || o.BaseDigest == nil {
		var ret string
		return ret
	}
	return *o.BaseDigest
}

// GetBaseDigestOk returns a tuple with the BaseDigest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseVulnerabilityResponse) GetBaseDigestOk() (*string, bool) {
	if o == nil || o.BaseDigest == nil {
		return nil, false
	}
	return o.BaseDigest, true
}

// HasBaseDigest returns a boolean if a field has been set.
func (o *EnterpriseVulnerabilityResponse) HasBaseDigest() bool {
	if o != nil && o.BaseDigest != nil {
		return true
	}

	return false
}

// SetBaseDigest gets a reference to the given string and assigns it to the BaseDigest field.
func (o *EnterpriseVulnerabilityResponse) SetBaseDigest(v string) {
	o.BaseDigest = &v
}

// GetVulnerabilityType returns the VulnerabilityType field value if set, zero value otherwise.
func (o *EnterpriseVulnerabilityResponse) GetVulnerabilityType() string {
	if o == nil || o.VulnerabilityType == nil {
		var ret string
		return ret
	}
	return *o.VulnerabilityType
}

// GetVulnerabilityTypeOk returns a tuple with the VulnerabilityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseVulnerabilityResponse) GetVulnerabilityTypeOk() (*string, bool) {
	if o == nil || o.VulnerabilityType == nil {
		return nil, false
	}
	return o.VulnerabilityType, true
}

// HasVulnerabilityType returns a boolean if a field has been set.
func (o *EnterpriseVulnerabilityResponse) HasVulnerabilityType() bool {
	if o != nil && o.VulnerabilityType != nil {
		return true
	}

	return false
}

// SetVulnerabilityType gets a reference to the given string and assigns it to the VulnerabilityType field.
func (o *EnterpriseVulnerabilityResponse) SetVulnerabilityType(v string) {
	o.VulnerabilityType = &v
}

// GetVulnerabilities returns the Vulnerabilities field value if set, zero value otherwise.
func (o *EnterpriseVulnerabilityResponse) GetVulnerabilities() []EnterpriseVulnerability {
	if o == nil || o.Vulnerabilities == nil {
		var ret []EnterpriseVulnerability
		return ret
	}
	return *o.Vulnerabilities
}

// GetVulnerabilitiesOk returns a tuple with the Vulnerabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseVulnerabilityResponse) GetVulnerabilitiesOk() (*[]EnterpriseVulnerability, bool) {
	if o == nil || o.Vulnerabilities == nil {
		return nil, false
	}
	return o.Vulnerabilities, true
}

// HasVulnerabilities returns a boolean if a field has been set.
func (o *EnterpriseVulnerabilityResponse) HasVulnerabilities() bool {
	if o != nil && o.Vulnerabilities != nil {
		return true
	}

	return false
}

// SetVulnerabilities gets a reference to the given []EnterpriseVulnerability and assigns it to the Vulnerabilities field.
func (o *EnterpriseVulnerabilityResponse) SetVulnerabilities(v []EnterpriseVulnerability) {
	o.Vulnerabilities = &v
}

func (o EnterpriseVulnerabilityResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ImageDigest != nil {
		toSerialize["image_digest"] = o.ImageDigest
	}
	if o.BaseDigest != nil {
		toSerialize["base_digest"] = o.BaseDigest
	}
	if o.VulnerabilityType != nil {
		toSerialize["vulnerability_type"] = o.VulnerabilityType
	}
	if o.Vulnerabilities != nil {
		toSerialize["vulnerabilities"] = o.Vulnerabilities
	}
	return json.Marshal(toSerialize)
}

type NullableEnterpriseVulnerabilityResponse struct {
	value *EnterpriseVulnerabilityResponse
	isSet bool
}

func (v NullableEnterpriseVulnerabilityResponse) Get() *EnterpriseVulnerabilityResponse {
	return v.value
}

func (v *NullableEnterpriseVulnerabilityResponse) Set(val *EnterpriseVulnerabilityResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEnterpriseVulnerabilityResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEnterpriseVulnerabilityResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnterpriseVulnerabilityResponse(val *EnterpriseVulnerabilityResponse) *NullableEnterpriseVulnerabilityResponse {
	return &NullableEnterpriseVulnerabilityResponse{value: val, isSet: true}
}

func (v NullableEnterpriseVulnerabilityResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnterpriseVulnerabilityResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


