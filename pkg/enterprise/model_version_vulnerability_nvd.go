/*
Nextlinux Enterprise API Server

This is the Nextlinux Enterprise API. It provides additional external API routes and functionality for enterprise users.

API version: 0.7.0
Contact: dev@nextlinux.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enterprise

import (
	"encoding/json"
)

// VersionVulnerabilityNVD NVD entry for application version vulnerability
type VersionVulnerabilityNVD struct {
	Cvss *VersionVulnerabilityVendorNVDCommonCvss `json:"cvss,omitempty"`
	Description *string `json:"description,omitempty"`
	Severity *string `json:"severity,omitempty"`
	Url *string `json:"url,omitempty"`
	Id *string `json:"id,omitempty"`
}

// NewVersionVulnerabilityNVD instantiates a new VersionVulnerabilityNVD object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVersionVulnerabilityNVD() *VersionVulnerabilityNVD {
	this := VersionVulnerabilityNVD{}
	return &this
}

// NewVersionVulnerabilityNVDWithDefaults instantiates a new VersionVulnerabilityNVD object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVersionVulnerabilityNVDWithDefaults() *VersionVulnerabilityNVD {
	this := VersionVulnerabilityNVD{}
	return &this
}

// GetCvss returns the Cvss field value if set, zero value otherwise.
func (o *VersionVulnerabilityNVD) GetCvss() VersionVulnerabilityVendorNVDCommonCvss {
	if o == nil || o.Cvss == nil {
		var ret VersionVulnerabilityVendorNVDCommonCvss
		return ret
	}
	return *o.Cvss
}

// GetCvssOk returns a tuple with the Cvss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionVulnerabilityNVD) GetCvssOk() (*VersionVulnerabilityVendorNVDCommonCvss, bool) {
	if o == nil || o.Cvss == nil {
		return nil, false
	}
	return o.Cvss, true
}

// HasCvss returns a boolean if a field has been set.
func (o *VersionVulnerabilityNVD) HasCvss() bool {
	if o != nil && o.Cvss != nil {
		return true
	}

	return false
}

// SetCvss gets a reference to the given VersionVulnerabilityVendorNVDCommonCvss and assigns it to the Cvss field.
func (o *VersionVulnerabilityNVD) SetCvss(v VersionVulnerabilityVendorNVDCommonCvss) {
	o.Cvss = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VersionVulnerabilityNVD) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionVulnerabilityNVD) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VersionVulnerabilityNVD) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VersionVulnerabilityNVD) SetDescription(v string) {
	o.Description = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *VersionVulnerabilityNVD) GetSeverity() string {
	if o == nil || o.Severity == nil {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionVulnerabilityNVD) GetSeverityOk() (*string, bool) {
	if o == nil || o.Severity == nil {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *VersionVulnerabilityNVD) HasSeverity() bool {
	if o != nil && o.Severity != nil {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *VersionVulnerabilityNVD) SetSeverity(v string) {
	o.Severity = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *VersionVulnerabilityNVD) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionVulnerabilityNVD) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *VersionVulnerabilityNVD) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *VersionVulnerabilityNVD) SetUrl(v string) {
	o.Url = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VersionVulnerabilityNVD) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionVulnerabilityNVD) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VersionVulnerabilityNVD) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VersionVulnerabilityNVD) SetId(v string) {
	o.Id = &v
}

func (o VersionVulnerabilityNVD) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cvss != nil {
		toSerialize["cvss"] = o.Cvss
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Severity != nil {
		toSerialize["severity"] = o.Severity
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableVersionVulnerabilityNVD struct {
	value *VersionVulnerabilityNVD
	isSet bool
}

func (v NullableVersionVulnerabilityNVD) Get() *VersionVulnerabilityNVD {
	return v.value
}

func (v *NullableVersionVulnerabilityNVD) Set(val *VersionVulnerabilityNVD) {
	v.value = val
	v.isSet = true
}

func (v NullableVersionVulnerabilityNVD) IsSet() bool {
	return v.isSet
}

func (v *NullableVersionVulnerabilityNVD) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVersionVulnerabilityNVD(val *VersionVulnerabilityNVD) *NullableVersionVulnerabilityNVD {
	return &NullableVersionVulnerabilityNVD{value: val, isSet: true}
}

func (v NullableVersionVulnerabilityNVD) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVersionVulnerabilityNVD) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


