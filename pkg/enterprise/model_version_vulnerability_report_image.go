/*
Nextlinux Enterprise API Server

This is the Nextlinux Enterprise API. It provides additional external API routes and functionality for enterprise users.

API version: 0.7.0
Contact: dev@nextlinux.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enterprise

import (
	"encoding/json"
)

// VersionVulnerabilityReportImage The definition of the image artifacts in the application version vulnerability report
type VersionVulnerabilityReportImage struct {
	ImageDigest *string `json:"image_digest,omitempty"`
}

// NewVersionVulnerabilityReportImage instantiates a new VersionVulnerabilityReportImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVersionVulnerabilityReportImage() *VersionVulnerabilityReportImage {
	this := VersionVulnerabilityReportImage{}
	return &this
}

// NewVersionVulnerabilityReportImageWithDefaults instantiates a new VersionVulnerabilityReportImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVersionVulnerabilityReportImageWithDefaults() *VersionVulnerabilityReportImage {
	this := VersionVulnerabilityReportImage{}
	return &this
}

// GetImageDigest returns the ImageDigest field value if set, zero value otherwise.
func (o *VersionVulnerabilityReportImage) GetImageDigest() string {
	if o == nil || o.ImageDigest == nil {
		var ret string
		return ret
	}
	return *o.ImageDigest
}

// GetImageDigestOk returns a tuple with the ImageDigest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionVulnerabilityReportImage) GetImageDigestOk() (*string, bool) {
	if o == nil || o.ImageDigest == nil {
		return nil, false
	}
	return o.ImageDigest, true
}

// HasImageDigest returns a boolean if a field has been set.
func (o *VersionVulnerabilityReportImage) HasImageDigest() bool {
	if o != nil && o.ImageDigest != nil {
		return true
	}

	return false
}

// SetImageDigest gets a reference to the given string and assigns it to the ImageDigest field.
func (o *VersionVulnerabilityReportImage) SetImageDigest(v string) {
	o.ImageDigest = &v
}

func (o VersionVulnerabilityReportImage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ImageDigest != nil {
		toSerialize["image_digest"] = o.ImageDigest
	}
	return json.Marshal(toSerialize)
}

type NullableVersionVulnerabilityReportImage struct {
	value *VersionVulnerabilityReportImage
	isSet bool
}

func (v NullableVersionVulnerabilityReportImage) Get() *VersionVulnerabilityReportImage {
	return v.value
}

func (v *NullableVersionVulnerabilityReportImage) Set(val *VersionVulnerabilityReportImage) {
	v.value = val
	v.isSet = true
}

func (v NullableVersionVulnerabilityReportImage) IsSet() bool {
	return v.isSet
}

func (v *NullableVersionVulnerabilityReportImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVersionVulnerabilityReportImage(val *VersionVulnerabilityReportImage) *NullableVersionVulnerabilityReportImage {
	return &NullableVersionVulnerabilityReportImage{value: val, isSet: true}
}

func (v NullableVersionVulnerabilityReportImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVersionVulnerabilityReportImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


