/*
Nextlinux Enterprise API Server

This is the Nextlinux Enterprise API. It provides additional external API routes and functionality for enterprise users.

API version: 0.7.0
Contact: dev@nextlinux.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enterprise

import (
	"encoding/json"
)

// ApplicationVersionVulnerabilityReportApplicationArtifacts struct for ApplicationVersionVulnerabilityReportApplicationArtifacts
type ApplicationVersionVulnerabilityReportApplicationArtifacts struct {
	Sources *[]VersionVulnerabilityReportSource `json:"sources,omitempty"`
	Images *[]VersionVulnerabilityReportImage `json:"images,omitempty"`
}

// NewApplicationVersionVulnerabilityReportApplicationArtifacts instantiates a new ApplicationVersionVulnerabilityReportApplicationArtifacts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationVersionVulnerabilityReportApplicationArtifacts() *ApplicationVersionVulnerabilityReportApplicationArtifacts {
	this := ApplicationVersionVulnerabilityReportApplicationArtifacts{}
	return &this
}

// NewApplicationVersionVulnerabilityReportApplicationArtifactsWithDefaults instantiates a new ApplicationVersionVulnerabilityReportApplicationArtifacts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationVersionVulnerabilityReportApplicationArtifactsWithDefaults() *ApplicationVersionVulnerabilityReportApplicationArtifacts {
	this := ApplicationVersionVulnerabilityReportApplicationArtifacts{}
	return &this
}

// GetSources returns the Sources field value if set, zero value otherwise.
func (o *ApplicationVersionVulnerabilityReportApplicationArtifacts) GetSources() []VersionVulnerabilityReportSource {
	if o == nil || o.Sources == nil {
		var ret []VersionVulnerabilityReportSource
		return ret
	}
	return *o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationVersionVulnerabilityReportApplicationArtifacts) GetSourcesOk() (*[]VersionVulnerabilityReportSource, bool) {
	if o == nil || o.Sources == nil {
		return nil, false
	}
	return o.Sources, true
}

// HasSources returns a boolean if a field has been set.
func (o *ApplicationVersionVulnerabilityReportApplicationArtifacts) HasSources() bool {
	if o != nil && o.Sources != nil {
		return true
	}

	return false
}

// SetSources gets a reference to the given []VersionVulnerabilityReportSource and assigns it to the Sources field.
func (o *ApplicationVersionVulnerabilityReportApplicationArtifacts) SetSources(v []VersionVulnerabilityReportSource) {
	o.Sources = &v
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *ApplicationVersionVulnerabilityReportApplicationArtifacts) GetImages() []VersionVulnerabilityReportImage {
	if o == nil || o.Images == nil {
		var ret []VersionVulnerabilityReportImage
		return ret
	}
	return *o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationVersionVulnerabilityReportApplicationArtifacts) GetImagesOk() (*[]VersionVulnerabilityReportImage, bool) {
	if o == nil || o.Images == nil {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *ApplicationVersionVulnerabilityReportApplicationArtifacts) HasImages() bool {
	if o != nil && o.Images != nil {
		return true
	}

	return false
}

// SetImages gets a reference to the given []VersionVulnerabilityReportImage and assigns it to the Images field.
func (o *ApplicationVersionVulnerabilityReportApplicationArtifacts) SetImages(v []VersionVulnerabilityReportImage) {
	o.Images = &v
}

func (o ApplicationVersionVulnerabilityReportApplicationArtifacts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Sources != nil {
		toSerialize["sources"] = o.Sources
	}
	if o.Images != nil {
		toSerialize["images"] = o.Images
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationVersionVulnerabilityReportApplicationArtifacts struct {
	value *ApplicationVersionVulnerabilityReportApplicationArtifacts
	isSet bool
}

func (v NullableApplicationVersionVulnerabilityReportApplicationArtifacts) Get() *ApplicationVersionVulnerabilityReportApplicationArtifacts {
	return v.value
}

func (v *NullableApplicationVersionVulnerabilityReportApplicationArtifacts) Set(val *ApplicationVersionVulnerabilityReportApplicationArtifacts) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationVersionVulnerabilityReportApplicationArtifacts) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationVersionVulnerabilityReportApplicationArtifacts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationVersionVulnerabilityReportApplicationArtifacts(val *ApplicationVersionVulnerabilityReportApplicationArtifacts) *NullableApplicationVersionVulnerabilityReportApplicationArtifacts {
	return &NullableApplicationVersionVulnerabilityReportApplicationArtifacts{value: val, isSet: true}
}

func (v NullableApplicationVersionVulnerabilityReportApplicationArtifacts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationVersionVulnerabilityReportApplicationArtifacts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


